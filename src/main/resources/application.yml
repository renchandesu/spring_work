spring:
  # redis的配置
  redis:
    password: abc123456
    host: 139.9.81.4
    port: 6379
    # mysql的配置
  datasource:
    url: jdbc:mysql://139.9.81.4:3306/devices
    username: root
    password: ying1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrapServers:
      - 139.9.81.4:9092 #kafka的地址
    producer:
      acks: 1 #生产者的消息可靠性设置 1代表kafka集群的leader节点收到消息，就会发送成功的响应
        # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false #手动提交偏移量
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 1
      #listner负责ack，每调用一次，就立即commit
      ack-mode: manual_immediate
      missing-topics-fatal: true #主题不存在时，容器是否直接失败